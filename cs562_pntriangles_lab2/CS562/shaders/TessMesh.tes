#version 400
 
// PN patch data
struct PNData
{
    float b210;
    float b120;
    float b021;
    float b012;
    float b102;
    float b201;
    float b111;
};
 
uniform mat4 M; 
uniform mat4 V; 
uniform mat4 P; 

const float uTessAlpha = 1.0f;         
 
layout(triangles, equal_spacing) in;
 
in PNData PatchData[];

in vec3 Normal_tcs[];
out vec3 Normal_tes;
 
void main()
{
    vec3 b300  = gl_in[0].gl_Position.xyz;
    vec3 b030  = gl_in[1].gl_Position.xyz;
    vec3 b003  = gl_in[2].gl_Position.xyz;
    
    // compute interpolated pos
    float x = pow(gl_TessCoord[2],3)*b300.x
				+ pow(gl_TessCoord[0],3)*b030.x
				+ pow(gl_TessCoord[1],3)*b003.x
				+ PatchData[0].b210 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[0]
				+ PatchData[0].b120 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[2]
				+ PatchData[0].b201 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[1]
				+ PatchData[0].b021 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[1]
				+ PatchData[0].b102 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[2]
				+ PatchData[0].b012 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[0]
				+ PatchData[0].b111 * 6 * gl_TessCoord[1] * gl_TessCoord[2] * gl_TessCoord[0];

	float y = pow(gl_TessCoord[2],3)*b300.y
				+ pow(gl_TessCoord[0],3)*b030.y
				+ pow(gl_TessCoord[1],3)*b003.y
				+ PatchData[1].b210 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[0]
				+ PatchData[1].b120 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[2]
				+ PatchData[1].b201 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[1]
				+ PatchData[1].b021 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[1]
				+ PatchData[1].b102 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[2]
				+ PatchData[1].b012 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[0]
				+ PatchData[1].b111 * 6 * gl_TessCoord[1] * gl_TessCoord[2] * gl_TessCoord[0];

	float z = pow(gl_TessCoord[2],3)*b300.z
				+ pow(gl_TessCoord[0],3)*b030.z
				+ pow(gl_TessCoord[1],3)*b003.z
				+ PatchData[2].b210 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[0]
				+ PatchData[2].b120 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[2]
				+ PatchData[2].b201 * 3 * pow(gl_TessCoord[2],2) * gl_TessCoord[1]
				+ PatchData[2].b021 * 3 * pow(gl_TessCoord[0],2) * gl_TessCoord[1]
				+ PatchData[2].b102 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[2]
				+ PatchData[2].b012 * 3 * pow(gl_TessCoord[1],2) * gl_TessCoord[0]
				+ PatchData[2].b111 * 6 * gl_TessCoord[1] * gl_TessCoord[2] * gl_TessCoord[0];

    gl_Position   = P * V * M * vec4(x,y,z,1.0);
    
    Normal_tes = Normal_tcs[0] + Normal_tcs[1] + Normal_tcs[2];
}